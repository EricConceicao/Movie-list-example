export const fetchMoviesData = async () => {
  // Fetch configuration object
  const config = {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
    },
  };

  try {
    // Fetching different data from jsonplaceholder to organize later to simulate movie data
    // and random names from 'randomuser' for use as cast for the movies and year of release
    const postsResponse = fetch(
      "https://jsonplaceholder.typicode.com/posts",
      config
    );
    const photosResponse = fetch(
      "https://jsonplaceholder.typicode.com/photos",
      config
    );
    const usersResponse = fetch(
      "https://randomuser.me//api/?results=100",
      config
    );

    // This awaits all promises to resolve in the given array of promises
    // using array destructuring to get the data from resolved promises in order
    // This helps to make multiple fetchs at same time, only awaiting their response later
    // otherwise, you will need to make a fetch, await, make a fetch, await...
    const [moviesData, photosData, actorsData] = await Promise.all([
      postsResponse,
      photosResponse,
      usersResponse,
    ]);

    // Changing the names to match a movie list site and converting to JS objects.
    const moviesJson = await moviesData.json();
    const photosJson = await photosData.json();
    const actorsJson = await actorsData.json();

    // Organizing the movies array with map function.
    // The cast part is a workaround to randomize multiple people per movie as the cast.
    const newArray = moviesJson.map((movie, index) => {
      return {
        ...movie,
        photoUrl: photosJson[index].url,
        cast: [
          actorsJson.results[Math.floor(Math.random() * 100 - 1)],
          actorsJson.results[Math.floor(Math.random() * 100 - 1)],
          actorsJson.results[Math.floor(Math.random() * 100 - 1)],
        ],
        date: actorsJson.results[index].registered.date.slice(0, 4),
      };
    });

    return newArray;
  } catch (err) {
    console.error("Error on fetchMoviesData function" + err);
  }
};
